# Generated by Django 5.0.2 on 2025-06-26 21:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Negocios",
            fields=[
                (
                    "negocio_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nombre", models.CharField(max_length=50, verbose_name="Nombre")),
                ("sector", models.CharField(max_length=50, verbose_name="Sector")),
                ("pais", models.CharField(max_length=50, verbose_name="País")),
                ("region", models.CharField(max_length=50, verbose_name="Región")),
                ("ciudad", models.CharField(max_length=50, verbose_name="Ciudad")),
                (
                    "direccion",
                    models.CharField(max_length=100, verbose_name="Dirección"),
                ),
                ("telefono", models.CharField(max_length=15, verbose_name="Telefono")),
                (
                    "ruc",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="RUC"
                    ),
                ),
                (
                    "foto",
                    models.ImageField(
                        blank=True,
                        default="negocios/negocio inicial.png",
                        upload_to="usuarios",
                        verbose_name="Logo de negocio",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                (
                    "tipo_suscripcion",
                    models.CharField(
                        choices=[
                            ("BS", "Básico"),
                            ("ET", "Estándar"),
                            ("PR", "Premium"),
                        ],
                        editable=False,
                        max_length=8,
                    ),
                ),
                ("inicio_suscripcion", models.DateField(editable=False)),
                ("fin_suscripcion", models.DateField(editable=False)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "numero_ventas",
                    models.PositiveIntegerField(
                        default=0, editable=False, verbose_name="Número de Ventas"
                    ),
                ),
            ],
            options={
                "verbose_name": "Negocio",
                "verbose_name_plural": "Negocios",
                "db_table": "Negocios",
                "ordering": ["fecha_creacion"],
            },
        ),
        migrations.CreateModel(
            name="Usuarios",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "usuario_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nombre", models.CharField(max_length=30, verbose_name="Nombre")),
                ("apellido", models.CharField(max_length=30, verbose_name="Apellido")),
                (
                    "dni",
                    models.CharField(max_length=8, unique=True, verbose_name="DNI"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=150, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("OP", "Trabajador"),
                            ("EX", "Ejecutivo"),
                            ("AD", "Administrador"),
                        ],
                        default="OP",
                        max_length=13,
                        verbose_name="Rol",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="Telefono"
                    ),
                ),
                (
                    "foto",
                    models.ImageField(
                        default="usuarios/usuario inicial.png",
                        upload_to="usuarios",
                        verbose_name="Foto de perfil",
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("IN", "Inactivo"),
                            ("AT", "Activo"),
                            ("PM", "De permiso"),
                        ],
                        default="AT",
                        max_length=12,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "negocio",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usuarios.negocios",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "db_table": "Usuarios",
                "ordering": ["negocio"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
